name: Rust Library Build and Release

on:
  # Trigger the workflow manually
  workflow_dispatch:
  
  push:
    branches:
      - 'main'

env:
  CARGO_TERM_COLOR: always # Ensure colored output in logs

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          target: [i686-pc-windows-msvc, x86_64-pc-windows-msvc, i686-unknown-linux-gnu, x86_64-unknown-linux-gnu]
          include:
              - name: gmsv_gheartbeat_win32.dll
                target: i686-pc-windows-msvc
                os: windows-latest
              - name: gmsv_gheartbeat_win64.dll
                target: x86_64-pc-windows-msvc
                os: windows-latest
              - name: gmsv_gheartbeat_linux.dll
                target: i686-unknown-linux-gnu
                os: ubuntu-latest
              - name: gmsv_gheartbeat_linux64.dll
                target: x86_64-unknown-linux-gnu
                os: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.target }}

      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Build for target ${{ matrix.target }}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Create Release Directory
        run: mkdir -p release/${{ matrix.target }}

      - name: Move Artifacts
        run: |
           if [ "$RUNNER_OS" == "Linux" ]; then
                mv target/${{ matrix.target }}/release/libgheartbeat_rs.so release/${{ matrix.target }}/${{ matrix.name }}
           elif [ "$RUNNER_OS" == "Windows" ]; then
                mv target/${{ matrix.target }}/release/libgheartbeat_rs.dll release/${{ matrix.target }}/${{ matrix.name }}
           else
                echo "$RUNNER_OS not supported"
                exit 1
           fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: release/${{ matrix.target }}/${{ matrix.name }}

      # - name: Create Release (if tag push)
      #   if: startsWith(github.ref, 'refs/tags/')
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: |
      #       release/${{ matrix.target }}/*
      #     tag_name: ${{ github.ref }}
      #     generate_release_notes: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
